/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cost;

import Model.Orders;
import java.awt.TextField;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class Ingredient2 extends javax.swing.JInternalFrame {
    //data to calculate date,target
    
    //int dailyTarget=0;
   // int duration=0;
   // int remaining;
   // int casted;
    
    
    //db connection settings
    /*
    String url="jdbc:mysql://localhost:3306/els";
    String username="root";
    String password="";
    Connection con=null;
    Statement st=null;
    ResultSet rs=null;
    */
   Connection con =null;
 PreparedStatement pst = null;
    /**
     * Creates new form DailyProductionProgress
     */
    public Ingredient2() {
        initComponents();
        showDailyProductionProgressReport();
         //con = DBconnection.connect();  
    }

    private Ingredient2(String msg) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    
    
    
    public void showDailyProductionProgressReport(){
    
       
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        aa = new javax.swing.JTextField();
        bb = new javax.swing.JTextField();
        cc = new javax.swing.JTextField();
        dd = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        a1 = new javax.swing.JTextField();
        jButton21 = new javax.swing.JButton();
        a2 = new javax.swing.JTextField();
        a3 = new javax.swing.JTextField();
        a4 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        b1 = new javax.swing.JTextField();
        b2 = new javax.swing.JTextField();
        b3 = new javax.swing.JTextField();
        b4 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        c1 = new javax.swing.JTextField();
        c2 = new javax.swing.JTextField();
        c3 = new javax.swing.JTextField();
        c4 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        d1 = new javax.swing.JTextField();
        d2 = new javax.swing.JTextField();
        d3 = new javax.swing.JTextField();
        d4 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        e1 = new javax.swing.JTextField();
        e2 = new javax.swing.JTextField();
        e3 = new javax.swing.JTextField();
        e4 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        f1 = new javax.swing.JTextField();
        f2 = new javax.swing.JTextField();
        f3 = new javax.swing.JTextField();
        f4 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        g1 = new javax.swing.JTextField();
        g2 = new javax.swing.JTextField();
        g3 = new javax.swing.JTextField();
        g4 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        h1 = new javax.swing.JTextField();
        h2 = new javax.swing.JTextField();
        h3 = new javax.swing.JTextField();
        h4 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        i1 = new javax.swing.JTextField();
        i2 = new javax.swing.JTextField();
        i3 = new javax.swing.JTextField();
        i4 = new javax.swing.JTextField();
        z1 = new javax.swing.JTextField();
        jButton23 = new javax.swing.JButton();
        z = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        t = new javax.swing.JComboBox();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));
        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(1920, 750));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setText("Item Number");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Quantity");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Local Quantity");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setText("Price(Rs)");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Unit Price(Rs)");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Cement(KG)");

        aa.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        aa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aaActionPerformed(evt);
            }
        });
        aa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                aaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aaKeyTyped(evt);
            }
        });

        bb.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        bb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbActionPerformed(evt);
            }
        });
        bb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bbKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bbKeyTyped(evt);
            }
        });

        cc.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cc.setMinimumSize(new java.awt.Dimension(6, 45));
        cc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccActionPerformed(evt);
            }
        });
        cc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ccKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ccKeyTyped(evt);
            }
        });

        dd.setEditable(false);
        dd.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        dd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddActionPerformed(evt);
            }
        });
        dd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ddKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("Ion(KG)");

        a1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        a1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a1ActionPerformed(evt);
            }
        });
        a1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                a1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                a1KeyTyped(evt);
            }
        });

        jButton21.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton21.setText("Generate");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        a2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        a2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                a2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                a2KeyTyped(evt);
            }
        });

        a3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        a3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a3ActionPerformed(evt);
            }
        });
        a3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                a3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                a3KeyTyped(evt);
            }
        });

        a4.setEditable(false);
        a4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        a4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                a4KeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setText("C  Aggregate(KG)");

        b1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });
        b1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                b1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                b1KeyTyped(evt);
            }
        });

        b2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        b2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                b2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                b2KeyTyped(evt);
            }
        });

        b3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        b3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                b3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                b3KeyTyped(evt);
            }
        });

        b4.setEditable(false);
        b4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel12.setText("M Sand(Cubu)");

        c1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        c1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                c1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c1KeyTyped(evt);
            }
        });

        c2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        c2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                c2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c2KeyTyped(evt);
            }
        });

        c3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        c3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                c3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c3KeyTyped(evt);
            }
        });

        c4.setEditable(false);
        c4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        c4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c4KeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel13.setText("V SL(L)");

        d1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        d1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d1ActionPerformed(evt);
            }
        });
        d1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                d1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d1KeyTyped(evt);
            }
        });

        d2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        d2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                d2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d2KeyTyped(evt);
            }
        });

        d3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        d3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                d3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d3KeyTyped(evt);
            }
        });

        d4.setEditable(false);
        d4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        d4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d4KeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel14.setText("V MY(L)");

        e1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        e1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e1ActionPerformed(evt);
            }
        });
        e1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                e1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                e1KeyTyped(evt);
            }
        });

        e2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        e2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e2ActionPerformed(evt);
            }
        });
        e2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                e2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                e2KeyTyped(evt);
            }
        });

        e3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        e3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                e3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                e3KeyTyped(evt);
            }
        });

        e4.setEditable(false);
        e4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        e4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                e4KeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel15.setText("Stabilizer(L)");

        f1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        f1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f1ActionPerformed(evt);
            }
        });
        f1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                f1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                f1KeyTyped(evt);
            }
        });

        f2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        f2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                f2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                f2KeyTyped(evt);
            }
        });

        f3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        f3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                f3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                f3KeyTyped(evt);
            }
        });

        f4.setEditable(false);
        f4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        f4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                f4KeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel16.setText("D Cement(KG)");

        g1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        g1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                g1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                g1KeyTyped(evt);
            }
        });

        g2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        g2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                g2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                g2KeyTyped(evt);
            }
        });

        g3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        g3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g3ActionPerformed(evt);
            }
        });
        g3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                g3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                g3KeyTyped(evt);
            }
        });

        g4.setEditable(false);
        g4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        g4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                g4KeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel17.setText("W Cement(KG)");

        h1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        h1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                h1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                h1KeyTyped(evt);
            }
        });

        h2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        h2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                h2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                h2KeyTyped(evt);
            }
        });

        h3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        h3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                h3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                h3KeyTyped(evt);
            }
        });

        h4.setEditable(false);
        h4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        h4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                h4KeyTyped(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel18.setText("Water(L)");

        i1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        i1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                i1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i1KeyTyped(evt);
            }
        });

        i2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        i2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                i2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i2KeyTyped(evt);
            }
        });

        i3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        i3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i3ActionPerformed(evt);
            }
        });
        i3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                i3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i3KeyTyped(evt);
            }
        });

        i4.setEditable(false);
        i4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        i4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i4KeyTyped(evt);
            }
        });

        z1.setEditable(false);
        z1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        z1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                z1ActionPerformed(evt);
            }
        });
        z1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                z1KeyTyped(evt);
            }
        });

        jButton23.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton23.setText("Total KG");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        z.setEditable(false);
        z.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        z.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zActionPerformed(evt);
            }
        });
        z.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                zKeyTyped(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton9.setText("Sub Total");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton8.setText("clear");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton24.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton24.setText("Save all");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        t.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        t.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "7068-0001-01-F", "7068-0001-02-F", "7068-0001-03-F", "7068-0001-04-F", "7068-0001-05-F", "7068-0001-06-F", "7068-0001-07-F", "7068-0001-08-F", "7068-0001-09-F", "7068-0001-10-F", "7068-0001-11-F", "7068-0001-12-F", "7068-0002-01-F", "7068-0002-02-F", "7068-0002-03-F", "7068-0002-04-F", "7068-0002-05-F", "7068-0002-06-F", "7068-0002-07-F", "7068-0002-08-F", "7068-0002-09-F", "7068-0002-10-F", "7068-0002-11-F", "7068-0002-12-F", "7068-0002-13-F", "7068-0002-14-F", "7068-0002-15-F", "7068-0002-16-F", "7068-0002-17-F", "7068-0002-18-F", "7068-0002-19-F", "7068-0002-20-F", "7068-0002-21-F", "7068-0002-22-F", "7068-0003-01-F", "7068-0003-02-F", "7068-0003-03-F", "7068-0003-04-F", "7068-0003-01-F", "7068-0003-01-F", "7068-0004-01-F", "7068-0004-02-F", "7068-0004-03-F", "7068-0005-01-F", "7068-0005-02-F", "7068-0005-03-F", "7068-0005-04-F", "7068-0005-05-F", "7068-0005-06-F", "7068-0005-07-F", "7068-0005-08-F", "7068-0005-09-F", "7068-0005-10-F", "7068-0005-11-F", "7068-0005-12-F", "7068-0005-13-F", "7068-0005-14-F", "7068-0005-15-F", "7068-0005-16-F", "7068-0005-17-F", "7068-0005-18-F", "7068-0005-19-F", "7068-0005-20-F", "7068-0005-21-F", "7068-0005-22-F", "7068-0005-23-F", "7068-0005-24-F", "7068-0005-25-F", "7068-0005-26-F", "7068-0005-27-F", "7068-0005-28-F", "7068-0005-29-F", "7068-0005-30-F", "7068-0005-31-F", "7068-0005-32-F", "7068-0005-33-F", "7068-0005-34-F", "7068-0005-35-F", "7068-0005-36-F", "7068-0005-37-F", "7068-0005-38-F", "7068-0005-39-F", "7068-0005-40-F", "7068-0005-41-F", "7068-0005-42-F", "7068-0005-43-F", "7068-0005-44-F", "7068-0005-45-F", "7068-0005-46-F", "7068-0005-47-F", "7068-0005-48-F", "7068-0005-49-F", "7068-0005-50-F", "7068-0005-51-F", "7068-0005-52-F", "7068-0005-53-F", "7068-0005-54-F", "7068-0005-55-F", "7068-0005-56-F", "7068-0005-57-F", "7068-0005-58-F", "7068-0005-59-F", "7068-0006-01-F", "7068-0006-02-F", "7068-0006-03-F", "7068-0006-04-F", "7068-0006-05-F", "7068-0006-06-F", "7068-0007-01-F", "7068-0007-02-F", "7068-0007-03-F", "7068-0007-04-F", "7068-0007-05-F", "7068-0007-06-F", "7068-0007-07-F", "7068-0007-08-F", "7068-0007-09-F", "7068-0007-10-F", "7068-0007-11-F", "7068-0007-12-F", "7068-0008-01-F", "7068-0008-02-F", "7068-0008-03-F", "7068-0008-04-F", "7068-0008-05-F", "7068-0008-06-F", "7068-0008-07-F", "7068-0008-08-F", "7068-0008-09-F", "7068-0008-10-F", "7068-0008-11-F", "7068-0008-12-F", "7068-0008-13-F", "7068-0008-14-F", "7068-0008-15-F", "7068-0008-16-F", "7068-0008-17-F", "7068-0008-18-F", "7068-0008-19-F", "7068-0008-20-F", "7068-0008-21-F", "7068-0008-22-F", "7068-0008-23-F", "7068-0008-24-F", "7068-0008-25-F", "7068-0008-26-F", "7068-0008-27-F", "7068-0008-28-F", "7068-0008-29-F", "7068-0008-30-F", "7068-0008-31-F", "7068-0008-32-F", "7068-0008-33-F", "7068-0008-34-F", "7068-0008-35-F", "7068-0008-36-F", "7068-0008-37-F", "7068-0008-38-F", "7068-0008-39-F", "7068-0008-40-F", "7068-0008-41-F", "7068-0008-42-F", "7068-0008-43-F", "7068-0008-44-F", "7068-0008-45-F", "7068-0008-46-F", "7068-0008-47-F", "7068-0008-48-F", "7068-0008-49-F", "7068-0008-50-F", "7068-0008-51-F", "7068-0009-01-F", "7068-0009-02-F", "7068-0009-03-F", "7068-0009-04-F", "7068-0009-05-F", "7068-0009-06-F", "7068-0009-07-F", "7068-0010-01-F", "7068-0010-02-F", "7068-0010-03-F", "7068-0010-04-F", "7068-0010-05-F", "7068-0011-01-F", "7068-0011-02-F", "7068-0011-03-F", "7068-0011-04-F", "7068-0011-05-F", "7068-0011-06-F", "7068-0011-07-F", "7068-0011-08-F", "7068-0011-09-F", "7068-0011-10-F", "7068-0011-11-F", "7068-0011-12-F", "7068-0011-13-F", "7068-0011-14-F", "7068-0011-15-F", "7068-0011-16-F", "7068-0011-17-F", "7068-0011-18-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0012-01-F", "7068-0013-01-F", "7068-0013-02-F", "7068-0013-03-F", "7068-0013-04-F", "7068-0013-05-F", "7068-0013-06-F", "7068-0013-07-F", "7068-0013-08-F", "7068-0013-09-F", "7068-0013-10-F", "7068-0013-11-F", "7068-0013-12-F", "7068-0013-13-F", "7068-0013-14-F", "7068-0013-15-F", "7068-0013-16-F", "7068-0013-17-F", "7068-0013-18-F", "7068-0014-01-F", "7068-0014-02-F", "7068-0014-03-F", "7068-0014-04-F", "7068-0014-05-F", "7068-0014-06-F", "7068-0014-07-F", "7068-0014-08-F", "7068-0014-09-F", "7068-0014-10-F", "7068-0014-11-F", "7068-0014-12-F", "7068-0014-13-F", "7068-0014-14-F", "7068-0015-01-F", "7068-0015-02-F", "7068-0015-03-F", "7068-0015-04-F", "7068-0015-05-F", "7068-0015-06-F", "7068-0015-07-F", "7068-0015-08-F", "7068-0015-09-F", "7068-0015-10-F", "7068-0015-11-F", "7068-0015-12-F", "7068-0015-13-F", "7068-0015-14-F", "7068-0015-15-F", "7068-0016-01-F", "7068-0016-02-F", "7068-0016-03-F", "7068-0016-04-F", "7068-0016-05-F", "7068-0017-01-F", "7068-0017-02-F", "7068-0017-03-F", "7068-0017-04-F", "7068-0017-05-F", "7068-0017-06-F", "7068-0017-07-F", "7068-0017-08-F", "7068-0017-09-F", "7068-0017-10-F", "7068-0017-11-F", "7068-0017-12-F", "7068-0017-13-F", "7068-0017-14-F", "7068-0017-15-F", "7068-0017-16-F", "7068-0017-17-F", "7068-0017-18-F", "7068-0017-19-F", "7068-0017-20-F", "7068-0017-21-F", "7068-0017-22-F", "7068-0017-23-F", "7068-0017-24-F", "7068-0017-25-F", "7068-0017-26-F", " " }));
        t.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tActionPerformed(evt);
            }
        });
        t.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tKeyReleased(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(83, 83, 83))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(69, 69, 69)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(g1, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                    .addComponent(f1)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(aa, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .addComponent(a1)
                                    .addComponent(b1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(d1)
                                    .addComponent(e1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(h1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(i1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(t, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(z1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(i2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(h2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(g2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(f2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(e2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(d2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(a2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bb, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(a3)
                                .addComponent(b3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(e3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(f3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(g3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(h3)
                                .addComponent(c3)
                                .addComponent(jButton9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                                .addComponent(d3)
                                .addComponent(i3)
                                .addComponent(cc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(z, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(i4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(h4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(g4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(f4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(e4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(d4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(a4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dd, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton24, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(66, 66, 66)
                .addComponent(jButton1)
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(aa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(bb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(a1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(a2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(a3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(a4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(c4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(c3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(d2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(d4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(d3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel13)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(e1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(e2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(e3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(e4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(f1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(f2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(f3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(f4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(g1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(112, 112, 112))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(g2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(g3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(g4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(h1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(h2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(h3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(h4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(i2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(i3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(i4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(i1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton8)
                        .addComponent(jButton21)
                        .addComponent(jButton24)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(z, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(z1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton23)
                        .addGap(6, 6, 6)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aaActionPerformed
       
      //  if(aa.isEmp)
        
    }//GEN-LAST:event_aaActionPerformed

    private void aaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aaKeyReleased
   String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(aa.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       aa.setText("");
          }
    }//GEN-LAST:event_aaKeyReleased

    private void bbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bbActionPerformed

    private void ccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ccActionPerformed

    private void ddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddActionPerformed

    private void a1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a1ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        double ee =Double.parseDouble(h1.getText());
        double ff= Double.parseDouble(h2.getText());
        double gg= Double.parseDouble(h3.getText());
        DecimalFormat df = new DecimalFormat("#.##");
        ee=Double.parseDouble(df.format(ee));
        ff=Double.parseDouble(df.format(ff));
        gg=Double.parseDouble(df.format(gg));
        double h = (gg/ff)*ee;
        h=Double.parseDouble(df.format(h));
        h4.setText((h+""));
        
        
        if (dd.getText().isEmpty()) {
            ee = 0 ;
            ff= 0;
            gg=0;
        }else{
         //  dd1 = Double.parseDouble(dd.getText());
        }
        //////////////////////////////////////////////jButton2 core

        
       
        if (aa.getText().isEmpty() || bb.getText().isEmpty() || cc.getText().isEmpty() ) {
            
            dd.setText((0+""));
            
        }else{
         //  dd1 = Double.parseDouble(dd.getText());
         double ee1 =Double.parseDouble(aa.getText());
        double ff1= Double.parseDouble(bb.getText());
        double gg1= Double.parseDouble(cc.getText());
        DecimalFormat df1 = new DecimalFormat("#.##");
        ee1=Double.parseDouble(df.format(ee1));
        ff1=Double.parseDouble(df.format(ff1));
        gg1=Double.parseDouble(df.format(gg1));
        double h1 = (gg1/ff1)*ee1;
        h1=Double.parseDouble(df.format(h1));
        dd.setText((h1+""));
        }
        ////////////////////////////////////////4
        if (a1.getText().isEmpty() || a2.getText().isEmpty() || a3.getText().isEmpty() ) {
            
            a4.setText((0+""));
        }else{
        
        
        
        double ee2 =Double.parseDouble(a1.getText());
        double ff2= Double.parseDouble(a2.getText());
        double gg2= Double.parseDouble(a3.getText());
        DecimalFormat df2 = new DecimalFormat("#.##");
        ee2=Double.parseDouble(df.format(ee2));
        ff2=Double.parseDouble(df.format(ff2));
        gg2=Double.parseDouble(df.format(gg2));
        double h2 = (gg2/ff2)*ee2;
        h2=Double.parseDouble(df.format(h2));
        a4.setText((h2+""));
        }
        ///////////////////////////////////////6
        if (b1.getText().isEmpty() || b2.getText().isEmpty() || b3.getText().isEmpty() ) {
            
            b4.setText((0+""));
        }else{
        
        double ee3 =Double.parseDouble(b1.getText());
        double ff3= Double.parseDouble(b2.getText());
        double gg3= Double.parseDouble(b3.getText());
        DecimalFormat df3 = new DecimalFormat("#.##");
        ee3=Double.parseDouble(df.format(ee3));
        ff3=Double.parseDouble(df.format(ff3));
        gg3=Double.parseDouble(df.format(gg3));
        double h3 = (gg3/ff3)*ee3;
        h3=Double.parseDouble(df.format(h3));
        b4.setText((h3+""));
        }
        //////////////////////////////1
           if (c1.getText().isEmpty() || c2.getText().isEmpty() || c3.getText().isEmpty() ) {
            
            c4.setText((0+""));
        }else{
        double ee4 =Double.parseDouble(c1.getText());
        double ff4= Double.parseDouble(c2.getText());
        double gg4= Double.parseDouble(c3.getText());
        DecimalFormat df4 = new DecimalFormat("#.##");
        ee4=Double.parseDouble(df.format(ee4));
        ff4=Double.parseDouble(df.format(ff4));
        gg4=Double.parseDouble(df.format(gg4));
        double h4 = (gg4/ff4)*ee4;
        h4=Double.parseDouble(df.format(h4));
        c4.setText((h4+""));
           }
        ////////////////////////////////11
              if (d1.getText().isEmpty() || d2.getText().isEmpty() || d3.getText().isEmpty() ) {
            
            d4.setText((0+""));
        }else{
           
        double ee5 =Double.parseDouble(d1.getText());
        double ff5= Double.parseDouble(d2.getText());
        double gg5= Double.parseDouble(d3.getText());
        DecimalFormat df5 = new DecimalFormat("#.##");
        ee5=Double.parseDouble(df.format(ee5));
        ff5=Double.parseDouble(df.format(ff5));
        gg5=Double.parseDouble(df.format(gg5));
        double h5 = (gg/ff)*ee;
        h5=Double.parseDouble(df.format(h5));
        d4.setText((h5+""));
              }
        /////////////////////////////////13
                 if (e1.getText().isEmpty() || e2.getText().isEmpty() || e3.getText().isEmpty() ) {
            
            e4.setText((0+""));
        }else{
              
        double ee6 =Double.parseDouble(e1.getText());
        double ff6= Double.parseDouble(e2.getText());
        double gg6= Double.parseDouble(e3.getText());
        DecimalFormat df6 = new DecimalFormat("#.##");
        ee6=Double.parseDouble(df.format(ee6));
        ff6=Double.parseDouble(df.format(ff6));
        gg6=Double.parseDouble(df.format(gg6));
        double h6 = (gg6/ff6)*ee6;
        h6=Double.parseDouble(df.format(h6));
        e4.setText((h6+""));
                 }
        ///////////////////////////////////15
                    if (f1.getText().isEmpty() || f2.getText().isEmpty() || f3.getText().isEmpty() ) {
            
            f4.setText((0+""));
        }else{
                 
        double ee7 =Double.parseDouble(f1.getText());
        double ff7= Double.parseDouble(f2.getText());
        double gg7= Double.parseDouble(f3.getText());
        DecimalFormat df7 = new DecimalFormat("#.##");
        ee7=Double.parseDouble(df.format(ee7));
        ff7=Double.parseDouble(df.format(ff7));
        gg7=Double.parseDouble(df.format(gg7));
        double h7 = (gg7/ff7)*ee7;
        h7=Double.parseDouble(df.format(h7));
        f4.setText((h7+""));
                    }
        /////////////////////////////////17
                       if (g1.getText().isEmpty() || g2.getText().isEmpty() || g3.getText().isEmpty() ) {
            
            g4.setText((0+""));
        }else{
                    
        double ee8 =Double.parseDouble(g1.getText());
        double ff8= Double.parseDouble(g2.getText());
        double gg8= Double.parseDouble(g3.getText());
        DecimalFormat df8 = new DecimalFormat("#.##");
        ee8=Double.parseDouble(df.format(ee8));
        ff8=Double.parseDouble(df.format(ff8));
        gg8=Double.parseDouble(df.format(gg8));
        double h8 = (gg8/ff8)*ee8;
        h8=Double.parseDouble(df.format(h8));
        g4.setText((h8+""));
                       }
        /////////////////////19
                  if (i1.getText().isEmpty() || i2.getText().isEmpty() || i3.getText().isEmpty() ) {
            
            i4.setText((0+""));
        }else{        
                       
        double ee9 =Double.parseDouble(i1.getText());
        //double ee9 =Double.parseDouble(h.getText());
        double ff9= Double.parseDouble(i2.getText());
        double gg9= Double.parseDouble(i3.getText());
        DecimalFormat df9 = new DecimalFormat("#.##");
        ee9=Double.parseDouble(df.format(ee9));
        ff9=Double.parseDouble(df.format(ff9));
        gg9=Double.parseDouble(df.format(gg9));
        double h9 = (gg9/ff9)*ee9;
        h9=Double.parseDouble(df.format(h9));
        i4.setText((h9+""));
        
                  }  
      
    }//GEN-LAST:event_jButton21ActionPerformed

    private void a3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a3ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b1ActionPerformed

    private void e1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e1ActionPerformed

    private void e2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e2ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        double dd1=0;
        double ee1=0;
        double gg1=0;
        double hh1=0;
        double ii1=0;
        double jj1=0;
        double kk1=0;
        double ll1=0;
        double mm1=0;
        double nn1=0;

        if (aa.getText().isEmpty()) {
            dd1 = 0 ;
        }else{
           dd1 = Double.parseDouble(aa.getText());
        }
        //
          if (a1.getText().isEmpty()) {
            ee1 = 0 ;
        }else{
           ee1 = Double.parseDouble(a1.getText());
        }
          //
        //ee1 =Double.parseDouble(a1.getText());
           if (b1.getText().isEmpty()) {
            gg1 = 0 ;
        }else{
          gg1 =Double.parseDouble(b1.getText());
        }
        //gg1 =Double.parseDouble(b1.getText());
           if (c1.getText().isEmpty()) {
            hh1 = 0 ;
        }else{
          hh1 =Double.parseDouble(c1.getText());
        }
       // hh1 =Double.parseDouble(c1.getText());
           if (d1.getText().isEmpty()) {
            ii1 = 0 ;
        }else{
          ii1 =Double.parseDouble(d1.getText());
        }
        //ii1 =Double.parseDouble(d1.getText());
           if (e1.getText().isEmpty()) {
            jj1 = 0 ;
        }else{
          jj1 =Double.parseDouble(e1.getText());
        }
       // jj1 =Double.parseDouble(e1.getText());
           if (f1.getText().isEmpty()) {
            kk1 = 0 ;
        }else{
          kk1 =Double.parseDouble(f1.getText());
        }
       // kk1 =Double.parseDouble(f1.getText());
           if (g1.getText().isEmpty()) {
            ll1 = 0 ;
        }else{
          ll1 =Double.parseDouble(g1.getText());
        }
        //ll1 =Double.parseDouble(g1.getText());
           if (h1.getText().isEmpty()) {
            mm1 = 0 ;
        }else{
          mm1 =Double.parseDouble(h1.getText());
        }
       // mm1 =Double.parseDouble(h1.getText());
           if (i1.getText().isEmpty()) {
            nn1 = 0 ;
        }else{
          nn1 =Double.parseDouble(i1.getText());
        }
       // nn1 =Double.parseDouble(i1.getText());
        double f1=dd1+ee1+gg1+hh1+(ii1*1.085)+(jj1*1.086)+(kk1*0.953)+ll1+mm1+nn1;
        DecimalFormat df = new DecimalFormat("#.###");
        f1=Double.parseDouble(df.format(f1));
        z1.setText(f1+"" );
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        double d1 =Double.parseDouble(dd.getText());
        double e1 =Double.parseDouble(a4.getText());
        double g1 =Double.parseDouble(b4.getText());
        double h1 =Double.parseDouble(c4.getText());
        double i1 =Double.parseDouble(d4.getText());
        double j1 =Double.parseDouble(e4.getText());
        double k1 =Double.parseDouble(f4.getText());
        double l1 =Double.parseDouble(g4.getText());
        double m1 =Double.parseDouble(h4.getText());
        double n1 =Double.parseDouble(i4.getText());
        double f1=d1+e1+g1+h1+i1+j1+k1+l1+m1+n1;
        DecimalFormat df = new DecimalFormat("#.###");
        f1=Double.parseDouble(df.format(f1));
        z.setText(f1+"" );
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        dd.setText(" ");
        a4.setText(" ");
        b4.setText(" ");
        c4.setText(" ");
        d4.setText(" ");
        e4.setText(" ");
        f4.setText(" ");
        g4.setText(" ");
        h4.setText(" ");
        i4.setText(" ");
          aa.setText(" ");
        bb.setText(" ");
        cc.setText(" ");
        //
        a1.setText(" ");
        a2.setText(" ");
        a3.setText(" ");
        b1.setText(" ");
        b2.setText(" ");
        b3.setText(" ");
        c1.setText(" ");
        c2.setText(" ");
        c3.setText(" ");
        d1.setText(" ");
        d2.setText(" ");
        d3.setText(" ");
        e1.setText(" ");
        e2.setText(" ");
        e3.setText(" ");
        f1.setText(" ");
        f2.setText(" ");
        f3.setText(" ");
        g1.setText(" ");
        g2.setText(" ");
        g3.setText(" ");
        h1.setText(" ");
        h2.setText(" ");
        h3.setText(" ");
        i1.setText(" ");
        i2.setText(" ");
        i3.setText(" ");

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        String item = t.getSelectedItem().toString();
        String Cement = dd.getText();
        String Ion = a4.getText();
        String C_Aggregate = b4.getText();
        String M_Sand = c4.getText();
        String V_SL = d4.getText();
        String V_MY = e4.getText();
        String Stabilizer = f4.getText();
        String DCement = g4.getText();
        String WCement = h4.getText();
        String Water = i4.getText();
        String Total_kg = z1.getText();
        String Sub_Total = z.getText();

        try {
            String qq ="INSERT INTO ingredient(Item_Number,Cement,Ion,C_Aggregate,M_Sand,V_SL,V_MY,Stabilizer,D_Cement, W_Cement,Water,Total_Kg,Sub_total) VALUES ('"+item+"','"+Cement+"','"+Ion+"','"+C_Aggregate+"','"+M_Sand+"','"+V_SL+"','"+V_MY+"','"+Stabilizer+"','"+DCement+"','"+WCement+"','"+Water+"','"+Total_kg+"','"+Sub_Total+"')";
           // pst = con.prepareStatement(qq);
      
              con = DriverManager.getConnection("jdbc:mysql://localhost/els?autoReconnect=true&useSSL=false","root","");
            pst = con.prepareStatement(qq);
            pst.execute();
            JOptionPane.showMessageDialog(null, "inserted successfully");
        } catch (Exception e) {
           // JOptionPane.showMessageDialog(null, "inserted successfully");
        }
        
       String msg = z.getText();
       new Other(msg).setVisible(true);
        
    }//GEN-LAST:event_jButton24ActionPerformed

    private void tActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tActionPerformed

    private void tKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tKeyReleased

    private void f1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_f1ActionPerformed

    private void d1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d1ActionPerformed

    private void g3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_g3ActionPerformed

    private void aaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aaKeyTyped
       
       //   TextField.setOnKeyTyped(event ->{
       // int maxCharacters = 5;
        //if(aa.getText().length() > maxCharacters) event.consume();
    //});
        
        char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
       
    }//GEN-LAST:event_aaKeyTyped

    private void a1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a1KeyTyped
         
        char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_a1KeyTyped

    private void b1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b1KeyTyped
       
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_b1KeyTyped

    private void c1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c1KeyTyped
        char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_c1KeyTyped

    private void d1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d1KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_d1KeyTyped

    private void e1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e1KeyTyped
     char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_e1KeyTyped

    private void f1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f1KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_f1KeyTyped

    private void g1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_g1KeyTyped
      char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_g1KeyTyped

    private void h1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_h1KeyTyped
      char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_h1KeyTyped

    private void i1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i1KeyTyped
        char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_i1KeyTyped

    private void z1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_z1KeyTyped
char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        
        }    }//GEN-LAST:event_z1KeyTyped

    private void bbKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bbKeyTyped
      char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_bbKeyTyped

    private void a2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a2KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_a2KeyTyped

    private void b2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b2KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_b2KeyTyped

    private void c2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c2KeyTyped
      char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_c2KeyTyped

    private void d2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d2KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_d2KeyTyped

    private void e2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e2KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_e2KeyTyped

    private void f2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f2KeyTyped
      char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_f2KeyTyped

    private void g2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_g2KeyTyped
   char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_g2KeyTyped

    private void h2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_h2KeyTyped
        char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_h2KeyTyped

    private void i2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i2KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_i2KeyTyped

    private void ccKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ccKeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_ccKeyTyped

    private void a3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a3KeyTyped
        char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_a3KeyTyped

    private void b3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b3KeyTyped
      char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_b3KeyTyped

    private void c3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c3KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_c3KeyTyped

    private void d3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d3KeyTyped
      char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_d3KeyTyped

    private void e3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e3KeyTyped
      char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_e3KeyTyped

    private void f3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f3KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_f3KeyTyped

    private void g3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_g3KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_g3KeyTyped

    private void h3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_h3KeyTyped
     char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_h3KeyTyped

    private void i3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i3KeyTyped
      char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_i3KeyTyped

    private void ddKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ddKeyTyped
      char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_ddKeyTyped

    private void a4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a4KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_a4KeyTyped

    private void c4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c4KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_c4KeyTyped

    private void d4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d4KeyTyped
     char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_d4KeyTyped

    private void e4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e4KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_e4KeyTyped

    private void f4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f4KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_f4KeyTyped

    private void g4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_g4KeyTyped
      char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_g4KeyTyped

    private void h4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_h4KeyTyped
       char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_h4KeyTyped

    private void i4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i4KeyTyped
      char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_i4KeyTyped

    private void zKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zKeyTyped
      char a=evt.getKeyChar();
        if(!(Character.isBmpCodePoint(a) || (a==KeyEvent.VK_BACK_SPACE) || a==KeyEvent.VK_DELETE)){
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_zKeyTyped

    private void zActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String msg = z.getText();
        new Ingredient2(msg).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void a1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a1KeyReleased
       String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(a1.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       a1.setText("");
          }
    }//GEN-LAST:event_a1KeyReleased

    private void b1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b1KeyReleased
        String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(b1.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       b1.setText("");
          }
    }//GEN-LAST:event_b1KeyReleased

    private void bbKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bbKeyReleased
        String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(bb.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       bb.setText("");
          }
    }//GEN-LAST:event_bbKeyReleased

    private void ccKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ccKeyReleased
       String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(cc.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       cc.setText("");
          }
    }//GEN-LAST:event_ccKeyReleased

    private void a2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a2KeyReleased
        String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(a2.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       a2.setText("");
          }
    }//GEN-LAST:event_a2KeyReleased

    private void a3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a3KeyReleased
        String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(a3.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       a3.setText("");
          }
    }//GEN-LAST:event_a3KeyReleased

    private void b2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b2KeyReleased
       String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(b2.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       b2.setText("");
          }
    }//GEN-LAST:event_b2KeyReleased

    private void b3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b3KeyReleased
        String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(b3.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       b3.setText("");
          }
    }//GEN-LAST:event_b3KeyReleased

    private void c1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c1KeyReleased
       String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(c1.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       c1.setText("");
          }
    }//GEN-LAST:event_c1KeyReleased

    private void c2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c2KeyReleased
       String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(c2.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       c2.setText("");
          }
    }//GEN-LAST:event_c2KeyReleased

    private void c3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c3KeyReleased
        String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(c3.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       c3.setText("");
          }
    }//GEN-LAST:event_c3KeyReleased

    private void d1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d1KeyReleased
        String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(d1.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       d1.setText("");
          }
    }//GEN-LAST:event_d1KeyReleased

    private void d2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d2KeyReleased
      String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(d2.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       d2.setText("");
          }
    }//GEN-LAST:event_d2KeyReleased

    private void d3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d3KeyReleased
    String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(d3.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       d3.setText("");
          }
    }//GEN-LAST:event_d3KeyReleased

    private void e1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e1KeyReleased
       String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(e1.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       e1.setText("");
          }
    }//GEN-LAST:event_e1KeyReleased

    private void e2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e2KeyReleased
      String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(e2.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       e2.setText("");
          }
    }//GEN-LAST:event_e2KeyReleased

    private void e3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_e3KeyReleased
        String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(e3.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       e3.setText("");
          }
    }//GEN-LAST:event_e3KeyReleased

    private void f1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f1KeyReleased
        String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(f1.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       f1.setText("");
          }
    }//GEN-LAST:event_f1KeyReleased

    private void f2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f2KeyReleased
        String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(f2.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       f2.setText("");
          }
    }//GEN-LAST:event_f2KeyReleased

    private void f3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_f3KeyReleased
      String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(f3.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       f3.setText("");
          }
    }//GEN-LAST:event_f3KeyReleased

    private void g1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_g1KeyReleased
      String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(g1.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       g1.setText("");
          }
    }//GEN-LAST:event_g1KeyReleased

    private void g2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_g2KeyReleased
       String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(g2.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       g2.setText("");
          }
    }//GEN-LAST:event_g2KeyReleased

    private void g3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_g3KeyReleased
        String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(g3.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       g3.setText("");
          }
    }//GEN-LAST:event_g3KeyReleased

    private void h1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_h1KeyReleased
       String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(h1.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       h1.setText("");
          }
    }//GEN-LAST:event_h1KeyReleased

    private void h2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_h2KeyReleased
       String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(h2.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       h2.setText("");
          }
    }//GEN-LAST:event_h2KeyReleased

    private void h3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_h3KeyReleased
        String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(h3.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       h3.setText("");
          }
    }//GEN-LAST:event_h3KeyReleased

    private void i1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i1KeyReleased
       String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(i1.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       i1.setText("");
          }
    }//GEN-LAST:event_i1KeyReleased

    private void i2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i2KeyReleased
      String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(i2.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       i2.setText("");
          }
    }//GEN-LAST:event_i2KeyReleased

    private void i3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i3KeyReleased
        String PATTERN="^[.0-9+]{0,12}$";
        Pattern patjt=Pattern.compile(PATTERN);
        Matcher match=patjt.matcher(i3.getText());
        if(!match.matches())
        {
        JOptionPane.showMessageDialog(null, " invalid Quantity");
       i3.setText("");
          }
    }//GEN-LAST:event_i3KeyReleased

    private void i3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i3ActionPerformed

    private void z1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_z1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_z1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a1;
    private javax.swing.JTextField a2;
    private javax.swing.JTextField a3;
    private javax.swing.JTextField a4;
    private javax.swing.JTextField aa;
    private javax.swing.JTextField b1;
    private javax.swing.JTextField b2;
    private javax.swing.JTextField b3;
    private javax.swing.JTextField b4;
    private javax.swing.JTextField bb;
    private javax.swing.JTextField c1;
    private javax.swing.JTextField c2;
    private javax.swing.JTextField c3;
    private javax.swing.JTextField c4;
    private javax.swing.JTextField cc;
    private javax.swing.JTextField d1;
    private javax.swing.JTextField d2;
    private javax.swing.JTextField d3;
    private javax.swing.JTextField d4;
    private javax.swing.JTextField dd;
    private javax.swing.JTextField e1;
    private javax.swing.JTextField e2;
    private javax.swing.JTextField e3;
    private javax.swing.JTextField e4;
    private javax.swing.JTextField f1;
    private javax.swing.JTextField f2;
    private javax.swing.JTextField f3;
    private javax.swing.JTextField f4;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JTextField g1;
    private javax.swing.JTextField g2;
    private javax.swing.JTextField g3;
    private javax.swing.JTextField g4;
    private javax.swing.JTextField h1;
    private javax.swing.JTextField h2;
    private javax.swing.JTextField h3;
    private javax.swing.JTextField h4;
    private javax.swing.JTextField i1;
    private javax.swing.JTextField i2;
    private javax.swing.JTextField i3;
    private javax.swing.JTextField i4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox t;
    private javax.swing.JTextField z;
    private javax.swing.JTextField z1;
    // End of variables declaration//GEN-END:variables
}
